# vim: set shiftwidth=2 tabstop=2 softtabstop=-1 expandtab:

# >  cat > .env.docker.local
# // Apple M1
# BUILD_PLATFORM=linux/arm64/v8
# BUILD_TAG=0.0.1
# BUILD_IGNORE=true
# BUILD_OPTION="cross-env ENV_JS=env/env.local.js BASE_URL=/ yarn build:web:oidc && yarn build:infrastructures && yarn build:identity-server"
# RUNTIME_ENV=production
# SERVE_ENV=local
# SERVE_APPS=''

# // Build
# > docker compose --env-file .env.docker.local build

# // Build & Run
# > rm -rf release && mkdir release && docker compose --env-file .env.docker.local up --build --force-recreate -d

# version: '3.1'

services:
  database:
    image: mysql:5.7
    restart: always
    container_name: pomelo-mysql
    volumes:
      - ${PWD}/mysql/conf.d:/etc/mysql/conf.d
      - ${PWD}/mysql/data:/var/lib/mysql
      - ${PWD}/mysql:/logs
    privileged: true
    # ports:
    #   - "3336:3306"
    #   - "127.0.0.1:3306:3306"
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_ROOT_PASSWORD:
      MYSQL_DATABASE: ${DATABASE_NAME:-po_template}
      MYSQL_USER: ${DATABASE_USER:-pomelo}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
  redis:
    # Adjust the build context to your needs targetting the created Dockerfile
    build:
      context: ./redis
      dockerfile: Dockerfile
    image: redis:7.2-alpine
    restart: always
    container_name: pomelo-redis
    # Run the init script
    command: sh -c "./init.sh"
    # command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    privileged: true
    # ports:
    #   - "16379:6379"
    #   - "127.0.0.1:6379:6379"
    volumes:
      - ${PWD}/redis/conf:/usr/local/etc/redis
      - ${PWD}/redis/data:/data
  server:
    build:
      context: ../
      dockerfile: Dockerfile
      args:
        BUILD_PLATFORM: ${BUILD_PLATFORM:-linux/amd64}
        BUILD_IGNORE: ${BUILD_IGNORE:-false} # ignore exectuing build in Dockerfile
        BUILD_OPTION: ${BUILD_OPTION:-build} # scripts in package.json
        RUNTIME_ENV: ${RUNTIME_ENV:-production} # runtime env, production | development
        SERVE_ENV: ${SERVE_ENV:-production} # env in ecosystem.config.js, production | fly
        SERVE_APPS: ${SERVE_APPS} # apps in ecosystem.config.js, run all apps if empty
        BUILDKIT_INLINE_CACHE: true
        BUILDKIT_CONTEXT_KEEP_GIT_DIR: true
      cache_from:
        - pomelo:latest
      target: deploy
      tags:
        - pomelo:${BUILD_TAG:-latest}
    image: pomelo:latest
    container_name: pomelo-server
    restart: always
    environment:
      - SWAGGER_DEBUG=${SWAGGER_DEBUG:-false}
      - GRAPHQL_DEBUG=${GRAPHQL_DEBUG:-false}
      - ORIGIN=${ORIGIN:-https://example.com}
      - REDIS_URL=redis://127.0.0.1:6379/0
      - INFRASTRUCTURE_DATABASE_CONNECTION=mysql://${MYSQL_USER:-pomelo}:${MYSQL_PASSWORD}@127.0.0.1:3306/${INFRASTRUCTURE_DATABASE_NAME:-po_template}
      - IDENTITY_DATABASE_CONNECTION=mysql://${MYSQL_USER:-pomelo}:${MYSQL_PASSWORD}@127.0.0.1:3306/${IDENTITY_DATABASE_NAME:-po_identity}
      - TABLE_PREFIX=${TABLE_PREFIX:-po_}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    volumes:
      - ${PWD}/conf:/app/conf
      - ${PWD}/uploads:/app/content/uploads
      - ${PWD}/plugins:/app/content/plugins
      - ${PWD}/themes:/app/content/themes
      - ${PWD}/logs:/app/logs
    privileged: true
    depends_on:
      - database
      - redis
    # ports:
    # - 3000:3000 # web
    # - 3002:3002 # bff server
    # - 3003:3003 # identity server
    # - 3004:3004 # static content
    networks:
      - default
  apisix:
    image: apache/apisix:3.13.0-debian
    container_name: pomelo-apisix
    restart: always
    environment:
      - APISIX_STAND_ALONE=true
    volumes:
      - ${PWD}/apisix/conf/apisix-standalone.yaml:/usr/local/apisix/conf/apisix.yaml:ro
      - ${PWD}/apisix/conf/config-standalone.yaml:/usr/local/apisix/conf/config.yaml:ro
      - ${PWD}/apisix:/usr/local/apisix/logs
    privileged: true
    depends_on:
      - server
    ##network_mode: host
    # ports:
    # - '9180:9180/tcp' # admin_control: true
    # - "9080:9080/tcp" # http
    # - '9091:9091/tcp'  # prometheus
    # - "9443:9443/tcp" # tls http/2
    # - '9092:9092/tcp' # enable_control: true
    networks:
      - default
  nginx:
    image: nginx:alpine
    container_name: pomelo-nginx
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    volumes:
      - ${PWD}/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ${PWD}/nginx/proxy.conf:/etc/nginx/proxy.conf
      - ${PWD}/nginx/conf.d:/etc/nginx/conf.d
      - ${PWD}/nginx:/var/log/nginx
    ports:
      - "8080:80"
      - "8443:443"
    depends_on:
      - server
      - apisix
    networks:
      - default
# volumes:
#   conf:
#     name: pomelo-conf
#     external: true
# driver: local
# driver_opts:
#   type: none
#   device: ${PWD}/${CONF_DIR:-CONF}
#   o: bind
