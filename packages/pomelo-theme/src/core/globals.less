// globals

// margin/padding
@spacing-width: 4px;
.spacing-size(auto, auto, e('margin'), e('m')) !important; // auto
.spacing-size(0, 0, e('margin'), e('m')) !important; // 0

each(range(16),.(@v,@k){
  @key: @k;
  @n-key: ~'n@{key}';
  @value: @v * @spacing-width;
  @n-value: 0 - @value;

  .spacing-size(@key, @value, e('margin'), e('m')) !important;
  .spacing-size(@n-key, @n-value, e('margin'), e('m')) !important;
}); // 1-16/-1--16

.spacing-size(0, 0, e('padding'), e('p')) !important; // 0

each(range(16),.(@v,@k){
  @key: @k;
  @value: @v * @spacing-width;

  .spacing-size(@key, @value, e('padding'), e('p')) !important;
}); // 1-16

.spacing-size(@key,@value,@property,@short-property) {
  .@{short-property}a-@{key} {
    @{property}: @value;
  }

  .@{short-property}x-@{key} {
    @{property}-left: @value;
    @{property}-right: @value;
  }

  .@{short-property}y-@{key} {
    @{property}-top: @value;
    @{property}-bottom: @value;
  }

  .@{short-property}t-@{key} {
    @{property}-top: @value;
  }

  .@{short-property}r-@{key} {
    @{property}-right: @value;
  }

  .@{short-property}b-@{key} {
    @{property}-bottom: @value;
  }

  .@{short-property}l-@{key} {
    @{property}-left: @value;
  }
}


// border-radius
@rounded: {
  0: 0;
  sm: @border-radius-sm;
  md: @border-radius-md;
  lg: @border-radius-lg;
  xl: @border-radius-xl;
  pill: @border-radius-max;
  circle: 50%;
};

each(@rounded,{
  .rounded-size(@key,@value) !important;
});

.rounded-size(@key,@value) {
  .rounded-@{key} {
    border-radius: @value;
  }

  .rounded-t-@{key} {
    border-top-left-radius: @value;
    border-top-right-radius: @value;
  }

  .rounded-r-@{key} {
    border-top-right-radius: @value;
    border-bottom-right-radius: @value;
  }

  .rounded-b-@{key} {
    border-bottom-left-radius: @value;
    border-bottom-right-radius: @value;
  }

  .rounded-l-@{key} {
    border-top-left-radius: @value;
    border-bottom-left-radius: @value;
  }

  .rounded-tl-@{key} {
    border-top-left-radius: @value;
  }

  .rounded-tr-@{key} {
    border-top-right-radius: @value;
  }

  .rounded-bl-@{key} {
    border-bottom-left-radius: @value;
  }

  .rounded-br-@{key} {
    border-bottom-right-radius: @value;
  }
}


// text
@text-aligns: left, center, right, justify;

each(@text-aligns,{
  .text-@{value} {
    text-align: @value !important;
  }
});

@font-sizes: {
  xs: @font-size-xs;
  sm: @font-size-sm;
  md: @font-size-md;
  lg: @font-size-lg;
  xl: @font-size-xl;
  xxl: @font-size-xxl;
  xxxl: @font-size-xxxl;
};

@line-heights: {
  xs: @line-height-xs;
  sm: @line-height-sm;
  md: @line-height-md;
  lg: @line-height-lg;
  xl: @line-height-xl;
  xxl: @line-height-xxl;
  xxxl: @line-height-xxxl;
};

each(@line-heights,{
  .line-height(@key, @value) !important;
});

each(@font-sizes,{
  .font-size(@key, @value) !important;
  .font(@key,@value, @line-heights[$@key]) !important;
});


.font-size(@key,@value) {
  .font-size-@{key} {
    .fontSize(@value);
  }
}

.line-height(@key,@value) {
  .line-height-@{key} {
    line-height: @value;
  }
}

// 上面两种的组合
.font(@key,@fontSize,@lineHeight){
  .font-@{key}{
    .fontSize(@fontSize);
    line-height: unit(round((@lineHeight/@fontSize), 2));
  }
}

@font-weights: {
  black: @font-weight-black;
  bold: @font-weight-bold;
  medium: @font-weight-medium;
  regular: @font-weight-regular;
  light: @font-weight-light;
  thin: @font-weight-thin;
};

each(@font-weights,{
  .font-weight-@{key} {
    font-weight: @value !important;
  }
});

@font-styles: normal, italic;

each(@font-styles,{
  .font-@{value} {
    font-style: @value !important;
  }
});


// display
@float-aligns: left, right, none;

each(@float-aligns,{
  .float-@{value} {
    float: @value !important;
  }
});

@displays: none, block, inline, inline-block, flex, inline-flex;

each(@displays,{
  .d-@{value} {
    display: @value !important;
  }
});

@flex-directions: row, row-reverse, column, column-reverse;

each(@flex-directions,{
  .flex-@{value} {
    flex-direction: @value !important;
  }
});

@flex-wraps: nowrap, wrap, wrap-reverse;

each(@flex-wraps,{
  .flex-@{value} {
    flex-wrap: @value !important;
  }
});

@justify-contents: flex-start, flex-end, start, end, center, left, right, stretch space-between, space-around, space-evenly;

each(@justify-contents,{
  .justify-content-@{value} {
    justify-content: @value !important;
  }
});

@justify-items: flex-start, flex-end, start, end, center, left, right, stretch space-between, space-around, space-evenly, self-start, self-end;

each(@justify-items,{
  .justify-items-@{value} {
    justify-items: @value !important;
  }
});

@justify-selfs: auto, flex-start, flex-end, start, end, center, left, right, stretch space-between, space-around, self-start, self-end;

each(@justify-selfs,{
  .justify-self-@{value} {
    justify-self: @value !important;
  }
});

@align-contents: baseline, flex-start, flex-end, start, end, center, left, right, stretch space-between, space-around, space-evenly;

each(@align-contents,{
  .align-content-@{value} {
    align-content: @value !important;
  }
});

@align-items: baseline, flex-start, flex-end, start, end, center, stretch, self-start, self-end;

each(@align-items,{
  .align-items-@{value} {
    align-items: @value !important;
  }
});

@align-selfs: auto, baseline, flex-start, flex-end, start, end, center, stretch;

each(@align-selfs,{
  .align-self-@{value} {
    align-self: @value !important;
  }
});

each(range(16),.(@v,@k){
  @key: @k;
  @value: @v * @spacing-width;

  .flex-gap-@{key} {
    gap: @value !important;
  }
}); // 1-16

.flex-none {
  flex: none !important;
}

.flex-auto {
  flex: 1 1 auto !important; // ie bug
}

.text-ellipsis {
  .textOverflow() !important;
}

.text-ellipsis-l2 {
  .textOverflowMulti(2) !important;
}

.box-shadow-up{
  box-shadow: var(--shadow-1-up, @shadow-1-up) !important;
}

.box-shadow-down{
  box-shadow: var(--shadow-1-down, @shadow-1-down) !important;
}

.box-shadow-left{
  box-shadow: var(--shadow-1-left, @shadow-1-left) !important;
}

.box-shadow-right{
  box-shadow: var(--shadow-1-right, @shadow-1-right) !important;
}

.box-shadow{
  box-shadow: var(--shadow-2, @shadow-2) !important;
}
