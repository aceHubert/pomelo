// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.6.1
//   protoc               v5.29.3
// source: comment.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';
import { wrappers } from 'protobufjs';
import { Observable } from 'rxjs';
import { CreateMetaRequest, DeleteMetaRequest, GetMetaRequest } from './common/meta';
import { Empty } from './google/protobuf/empty';

export const protobufPackage = 'pomelo.service';

/** 评论模型，表示系统中的评论内容 */
export interface CommentModel {
  /** 评论ID */
  id: number;
  /** 关联的模板ID */
  templateId: number;
  /** 评论作者名称 */
  author: string;
  /** 作者邮箱 */
  authorEmail?: string | undefined;
  /** 作者网站 */
  authorUrl?: string | undefined;
  /** 作者IP地址 */
  authorIp?: string | undefined;
  /** 评论内容 */
  content: string;
  /** 是否已审核通过 */
  approved: boolean;
  /** 是否已编辑 */
  edited: boolean;
  /** 评论类型 */
  type: string;
  /** 用户代理信息 */
  agent?: string | undefined;
  /** 父评论ID（用于回复） */
  parentId: number;
  /** 评论用户ID */
  userId: number;
  /** 创建时间 */
  createdAt: Date;
  /** 更新时间 */
  updatedAt: Date;
}

/** 获取评论请求 */
export interface GetCommentRequest {
  /** 评论ID */
  id: number;
  /** 需要返回的字段列表 */
  fields: string[];
}

/** 获取评论响应 */
export interface GetCommentResponse {
  /** 评论信息 */
  comment?: CommentModel | undefined;
}

/** 分页获取评论请求 */
export interface GetPagedCommentRequest {
  /** 分页偏移量 */
  offset?: number | undefined;
  /** 每页数量限制 */
  limit?: number | undefined;
  /** 按模板ID筛选 */
  templateId?: number | undefined;
  /** 按父评论ID筛选 */
  parentId?: number | undefined;
  /** 需要返回的字段列表 */
  fields: string[];
}

/** 分页获取评论响应 */
export interface GetPagedCommentResponse {
  /** 评论列表 */
  rows: CommentModel[];
  /** 总数量 */
  total: number;
}

/** 创建评论请求 */
export interface CreateCommentRequest {
  /** 关联的模板ID */
  templateId: number;
  /** 评论作者名称 */
  author?: string | undefined;
  /** 作者邮箱 */
  authorEmail?: string | undefined;
  /** 作者网站 */
  authorUrl?: string | undefined;
  /** 作者IP地址 */
  authorIp?: string | undefined;
  /** 评论内容 */
  content: string;
  /** 是否已审核通过 */
  approved?: boolean | undefined;
  /** 是否已编辑 */
  edited?: boolean | undefined;
  /** 评论类型 */
  type?: string | undefined;
  /** 用户代理信息 */
  agent?: string | undefined;
  /** 父评论ID */
  parentId?: number | undefined;
  /** 评论元数据列表 */
  metas: CreateMetaRequest[];
  /** 请求用户ID */
  requestUserId: number;
}

/** 创建评论响应 */
export interface CreateCommentResponse {
  /** 创建的评论信息 */
  comment: CommentModel;
}

/** 更新评论请求 */
export interface UpdateCommentRequest {
  /** 评论ID */
  id: number;
  /** 评论内容 */
  content?: string | undefined;
  /** 是否已审核通过 */
  approved?: boolean | undefined;
  /** 是否已编辑 */
  edited?: boolean | undefined;
  /** 请求用户ID */
  requestUserId: number;
}

/** 删除评论请求 */
export interface DeleteCommentRequest {
  /** 评论ID */
  id: number;
  /** 请求用户ID */
  requestUserId: number;
}

/** 评论元数据模型 */
export interface CommentMetaModel {
  /** 元数据ID */
  id: number;
  /** 评论ID */
  commentId: number;
  /** 元数据键名 */
  metaKey: string;
  /** 元数据值 */
  metaValue?: string | undefined;
}

/** 获取评论元数据响应 */
export interface GetCommentMetaResponse {
  /** 元数据信息 */
  meta?: CommentMetaModel | undefined;
}

/** 获取评论元数据列表请求 */
export interface GetCommentMetasRequest {
  /** 单个评论ID */
  commentId?: number | undefined;
  /** 多个评论ID列表 */
  commentIds?: GetCommentMetasRequestCommentIds | undefined;
  /** 要获取的元数据键名列表 */
  metaKeys: string[];
  /** 需要返回的字段列表 */
  fields: string[];
}

/** 评论ID列表包装 */
export interface GetCommentMetasRequestCommentIds {
  /** 评论ID列表 */
  value: number[];
}

/** 获取评论元数据列表响应 */
export interface GetCommentMetasResponse {
  /** 元数据列表 */
  metas: CommentMetaModel[];
}

/** 创建评论元数据请求 */
export interface CreateCommentMetaRequest {
  /** 评论ID */
  commentId: number;
  /** 元数据键名 */
  metaKey: string;
  /** 元数据值 */
  metaValue?: string | undefined;
}

/** 创建评论元数据响应 */
export interface CreateCommentMetaResponse {
  /** 创建的元数据信息 */
  meta: CommentMetaModel;
}

/** 批量创建评论元数据请求 */
export interface CreateCommentMetasRequest {
  /** 评论ID */
  commentId: number;
  /** 要创建的元数据列表 */
  metas: CommentMetaModel[];
}

/** 批量创建评论元数据响应 */
export interface CreateCommentMetasResponse {
  /** 创建的元数据列表 */
  metas: CommentMetaModel[];
}

/** 更新评论元数据请求 */
export interface UpdateCommentMetaRequest {
  /** 元数据ID */
  id: number;
  /** 新的元数据值 */
  metaValue: string;
}

/** 通过键名更新评论元数据请求 */
export interface UpdateCommentMetaByKeyRequest {
  /** 评论ID */
  commentId: number;
  /** 元数据键名 */
  metaKey: string;
  /** 新的元数据值 */
  metaValue: string;
  /** 如果不存在是否创建 */
  createIfNotExist?: boolean | undefined;
}

/** 通过键名删除评论元数据请求 */
export interface DeleteCommentMetaByKeyRequest {
  /** 评论ID */
  commentId: number;
  /** 要删除的元数据键名 */
  metaKey: string;
}

export const POMELO_SERVICE_PACKAGE_NAME = 'pomelo.service';

wrappers['.google.protobuf.Timestamp'] = {
  fromObject(value: Date) {
    return { seconds: value.getTime() / 1000, nanos: (value.getTime() % 1000) * 1e6 };
  },
  toObject(message: { seconds: number; nanos: number }) {
    return new Date(message.seconds * 1000 + message.nanos / 1e6);
  },
} as any;

/** 评论服务接口定义 */

export interface CommentServiceClient {
  /** 获取单个评论 */

  get(request: GetCommentRequest, ...rest: any): Observable<GetCommentResponse>;

  /** 分页获取评论列表 */

  getPaged(request: GetPagedCommentRequest, ...rest: any): Observable<GetPagedCommentResponse>;

  /** 创建新评论 */

  create(request: CreateCommentRequest, ...rest: any): Observable<CreateCommentResponse>;

  /** 更新评论 */

  update(request: UpdateCommentRequest, ...rest: any): Observable<Empty>;

  /** 删除评论 */

  delete(request: DeleteCommentRequest, ...rest: any): Observable<Empty>;

  /** 获取元数据 */

  getMeta(request: GetMetaRequest, ...rest: any): Observable<GetCommentMetaResponse>;

  /** 获取元数据列表 */

  getMetas(request: GetCommentMetasRequest, ...rest: any): Observable<GetCommentMetasResponse>;

  /** 创建元数据 */

  createMeta(request: CreateCommentMetaRequest, ...rest: any): Observable<CreateCommentMetaResponse>;

  /** 批量创建元数据 */

  createMetas(request: CreateCommentMetasRequest, ...rest: any): Observable<CreateCommentMetasResponse>;

  /** 更新元数据 */

  updateMeta(request: UpdateCommentMetaRequest, ...rest: any): Observable<Empty>;

  /** 通过键名更新元数据 */

  updateMetaByKey(request: UpdateCommentMetaByKeyRequest, ...rest: any): Observable<Empty>;

  /** 删除元数据 */

  deleteMeta(request: DeleteMetaRequest, ...rest: any): Observable<Empty>;

  /** 通过键名删除元数据 */

  deleteMetaByKey(request: DeleteCommentMetaByKeyRequest, ...rest: any): Observable<Empty>;
}

/** 评论服务接口定义 */

export interface CommentServiceController {
  /** 获取单个评论 */

  get(
    request: GetCommentRequest,
    ...rest: any
  ): Promise<GetCommentResponse> | Observable<GetCommentResponse> | GetCommentResponse;

  /** 分页获取评论列表 */

  getPaged(
    request: GetPagedCommentRequest,
    ...rest: any
  ): Promise<GetPagedCommentResponse> | Observable<GetPagedCommentResponse> | GetPagedCommentResponse;

  /** 创建新评论 */

  create(
    request: CreateCommentRequest,
    ...rest: any
  ): Promise<CreateCommentResponse> | Observable<CreateCommentResponse> | CreateCommentResponse;

  /** 更新评论 */

  update(request: UpdateCommentRequest, ...rest: any): void;

  /** 删除评论 */

  delete(request: DeleteCommentRequest, ...rest: any): void;

  /** 获取元数据 */

  getMeta(
    request: GetMetaRequest,
    ...rest: any
  ): Promise<GetCommentMetaResponse> | Observable<GetCommentMetaResponse> | GetCommentMetaResponse;

  /** 获取元数据列表 */

  getMetas(
    request: GetCommentMetasRequest,
    ...rest: any
  ): Promise<GetCommentMetasResponse> | Observable<GetCommentMetasResponse> | GetCommentMetasResponse;

  /** 创建元数据 */

  createMeta(
    request: CreateCommentMetaRequest,
    ...rest: any
  ): Promise<CreateCommentMetaResponse> | Observable<CreateCommentMetaResponse> | CreateCommentMetaResponse;

  /** 批量创建元数据 */

  createMetas(
    request: CreateCommentMetasRequest,
    ...rest: any
  ): Promise<CreateCommentMetasResponse> | Observable<CreateCommentMetasResponse> | CreateCommentMetasResponse;

  /** 更新元数据 */

  updateMeta(request: UpdateCommentMetaRequest, ...rest: any): void;

  /** 通过键名更新元数据 */

  updateMetaByKey(request: UpdateCommentMetaByKeyRequest, ...rest: any): void;

  /** 删除元数据 */

  deleteMeta(request: DeleteMetaRequest, ...rest: any): void;

  /** 通过键名删除元数据 */

  deleteMetaByKey(request: DeleteCommentMetaByKeyRequest, ...rest: any): void;
}

export function CommentServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = [
      'get',
      'getPaged',
      'create',
      'update',
      'delete',
      'getMeta',
      'getMetas',
      'createMeta',
      'createMetas',
      'updateMeta',
      'updateMetaByKey',
      'deleteMeta',
      'deleteMetaByKey',
    ];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      if (descriptor) {
        GrpcMethod('CommentService', method)(constructor.prototype[method], method, descriptor);
      }
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod('CommentService', method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const COMMENT_SERVICE_NAME = 'CommentService';
