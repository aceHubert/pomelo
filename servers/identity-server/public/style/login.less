// out: true

@import 'variables.less';

#app {
  min-height: 100vh;
  // background: linear-gradient(153deg, #ffffff 0%, #f2f2f2 100%);
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.wrapper {
  margin: auto;
  padding: 40px 30px 30px;
  max-width: 500px;
}

form {
  margin-top: 20px;
}

form .row > div {
  position: relative;
}

form a {
  color: var(--text-color);
  text-decoration: underline;
}

form a:hover,
form a:focus {
  color: var(--theme-primary);
}

.form-control#password {
  padding-right: 2.5em;
}

.was-validated .form-control:invalid#password + .icon-field {
  display: none;
}

.was-validated .form-control:valid#password {
  padding-right: calc(var(--bs-gutter-x) * 0.5 + 1.5rem + 0.75rem);
}

.was-validated .form-control:valid#password + .icon-field {
  right: calc(var(--bs-gutter-x) * 0.5 + 1.5rem + 0.75rem);
  transition: right 0.2s ease-in-out;
}

.form-control:hover,
.form-control:focus {
  outline: none;
  -webkit-box-shadow: none;
  box-shadow: none;
}

.form-check-input:focus {
  -webkit-box-shadow: none;
  box-shadow: none;
}

.form-check-input.is-valid, .was-validated .form-check-input:valid {
  border-color: var(--bs-border-color);
}

.was-validated .form-check-input:valid:checked {
  background-color: var(--theme-primary);
  border-color: var(--theme-primary);
}

.was-validated .form-check-input:valid:focus{
  -webkit-box-shadow: none;
  box-shadow: none;
}

.was-validated .form-check-input:valid~.form-check-label {
  color: initial;
}

.icon-field {
  width: 18px;
  height: 18px;
  position: absolute;
  top: 50%;
  right: calc(var(--bs-gutter-x) * 0.5 + 1rem);
  transform: translateY(-50%);
}

.icon-field.eye {
  background: url(../icon/eye.svg) no-repeat center center;
  background-size: cover;
}

.icon-field.eye.slash {
  background-image: url(../icon/eye-slash.svg);
}

@media screen and (min-width: 576px) and (min-height: 768px) {
  .wrapper {
    width: 500px;
    background-color: #fff;
    box-shadow: @box-shadow-base;
    position: absolute;
    left: 50%;
    top: 40%;
    transform: translate(-50%, -50%);
  }
}

#error {
  color: @error-color;
}
