syntax = "proto3";

package pomelo.service;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "common/meta.proto";
// import "common/enum.proto";

// /**
//  * 评论相关常量定义
//  */
// message Comment {
//   /**
//    * 评论类型枚举
//    */
//   enum Type {
//     Comment = 0 [ (Value) = 'comment' ]; // 普通评论类型
//   }
// }

/**
 * 评论模型，表示系统中的评论内容
 */
message CommentModel {
  // 评论ID
  int32 id = 1;
  // 关联的模板ID
  int32 templateId = 2;
  // 评论作者名称
  string author = 3;
  // 作者邮箱
  optional string authorEmail = 4;
  // 作者网站
  optional string authorUrl = 5;
  // 作者IP地址
  optional string authorIp = 6;
  // 评论内容
  string content = 7;
  // 是否已审核通过
  bool approved = 8;
  // 是否已编辑
  bool edited = 9;
  // 评论类型
  string type = 10;
  // 用户代理信息
  optional string agent = 11;
  // 父评论ID（用于回复）
  int32 parentId = 12;
  // 评论用户ID
  int32 userId = 13;
  // 创建时间
  google.protobuf.Timestamp createdAt = 100;
  // 更新时间
  google.protobuf.Timestamp updatedAt = 99;
}

/**
 * 获取评论请求
 */
message GetCommentRequest {
  // 评论ID
  int32 id = 1;
  // 需要返回的字段列表
  repeated string fields = 100;
}

/**
 * 获取评论响应
 */
message GetCommentResponse {
  // 评论信息
  optional CommentModel comment = 1;
}

/**
 * 分页获取评论请求
 */
message GetPagedCommentRequest {
  // 分页偏移量
  optional int32 offset = 1;
  // 每页数量限制
  optional int32 limit = 2;
  // 按模板ID筛选
  optional int32 templateId = 3;
  // 按父评论ID筛选
  optional int32 parentId = 4;
  // 需要返回的字段列表
  repeated string fields = 100;
}

/**
 * 分页获取评论响应
 */
message GetPagedCommentResponse {
  // 评论列表
  repeated CommentModel rows = 1;
  // 总数量
  int32 total = 2;
}

/**
 * 创建评论请求
 */
message CreateCommentRequest {
  // 关联的模板ID
  int32 templateId = 1;
  // 评论作者名称
  optional string author = 2;
  // 作者邮箱
  optional string authorEmail = 3;
  // 作者网站
  optional string authorUrl = 4;
  // 作者IP地址
  optional string authorIp = 5;
  // 评论内容
  string content = 6;
  // 是否已审核通过
  optional bool approved = 8;
  // 是否已编辑
  optional bool edited = 9;
  // 评论类型
  optional string type = 10;
  // 用户代理信息
  optional string agent = 11;
  // 父评论ID
  optional int32 parentId = 12;
  // 评论元数据列表
  repeated CreateMetaRequest metas = 13;
  // 请求用户ID
  int32 requestUserId = 101;
}

/**
 * 创建评论响应
 */
message CreateCommentResponse {
  // 创建的评论信息
  CommentModel comment = 1;
}

/**
 * 更新评论请求
 */
message UpdateCommentRequest {
  // 评论ID
  int32 id = 1;
  // 评论内容
  optional string content = 7;
  // 是否已审核通过
  optional bool approved = 8;
  // 是否已编辑
  optional bool edited = 9;
  // 请求用户ID
  int32 requestUserId = 101;
}

/**
 * 删除评论请求
 */
message DeleteCommentRequest {
  // 评论ID
  int32 id = 1;
  // 请求用户ID
  int32 requestUserId = 101;
}

/**
 * 评论元数据模型
 */
message CommentMetaModel {
  // 元数据ID
  int32 id = 1;
  // 评论ID
  int32 commentId = 2;
  // 元数据键名
  string metaKey = 3;
  // 元数据值
  optional string metaValue = 4;
}

/**
 * 获取评论元数据响应
 */
message GetCommentMetaResponse {
  // 元数据信息
  optional CommentMetaModel meta = 1;
}

/**
 * 获取评论元数据列表请求
 */
message GetCommentMetasRequest {
  /**
   * 评论ID列表包装
   */
  message CommentIds {
    // 评论ID列表
    repeated int32 value = 1;
  }
  // 单个评论ID或多个评论ID列表
  oneof kind {
    // 单个评论ID
    int32 commentId = 1;
    // 多个评论ID列表
    CommentIds commentIds = 2;
  }
  // 要获取的元数据键名列表
  repeated string metaKeys = 3;
  // 需要返回的字段列表
  repeated string fields = 100;
}

/**
 * 获取评论元数据列表响应
 */
message GetCommentMetasResponse {
  // 元数据列表
  repeated CommentMetaModel metas = 1;
}

/**
 * 创建评论元数据请求
 */
message CreateCommentMetaRequest {
  // 评论ID
  int32 commentId = 1;
  // 元数据键名
  string metaKey = 2;
  // 元数据值
  optional string metaValue = 3;
}

/**
 * 创建评论元数据响应
 */
message CreateCommentMetaResponse {
  // 创建的元数据信息
  CommentMetaModel meta = 1;
}

/**
 * 批量创建评论元数据请求
 */
message CreateCommentMetasRequest {
  // 评论ID
  int32 commentId = 1;
  // 要创建的元数据列表
  repeated CommentMetaModel metas = 3;
}

/**
 * 批量创建评论元数据响应
 */
message CreateCommentMetasResponse {
  // 创建的元数据列表
  repeated CommentMetaModel metas = 1;
}

/**
 * 更新评论元数据请求
 */
message UpdateCommentMetaRequest {
  // 元数据ID
  int32 id = 1;
  // 新的元数据值
  string metaValue = 2;
}

/**
 * 通过键名更新评论元数据请求
 */
message UpdateCommentMetaByKeyRequest {
  // 评论ID
  int32 commentId = 1;
  // 元数据键名
  string metaKey = 2;
  // 新的元数据值
  string metaValue = 3;
  // 如果不存在是否创建
  optional bool createIfNotExist = 4;
}

/**
 * 通过键名删除评论元数据请求
 */
message DeleteCommentMetaByKeyRequest {
  // 评论ID
  int32 commentId = 1;
  // 要删除的元数据键名
  string metaKey = 2;
}

/**
 * 评论服务接口定义
 */
service CommentService {
  // 获取单个评论
  rpc Get(GetCommentRequest) returns (GetCommentResponse) {}
  // 分页获取评论列表
  rpc GetPaged(GetPagedCommentRequest) returns (GetPagedCommentResponse) {}
  // 创建新评论
  rpc Create(CreateCommentRequest) returns (CreateCommentResponse) {}
  // 更新评论
  rpc Update(UpdateCommentRequest) returns (google.protobuf.Empty) {}
  // 删除评论
  rpc Delete(DeleteCommentRequest) returns (google.protobuf.Empty) {}
  // 获取元数据
  rpc GetMeta(GetMetaRequest) returns (GetCommentMetaResponse) {}
  // 获取元数据列表
  rpc GetMetas(GetCommentMetasRequest) returns (GetCommentMetasResponse) {}
  // 创建元数据
  rpc CreateMeta(CreateCommentMetaRequest) returns (CreateCommentMetaResponse) {
  }
  // 批量创建元数据
  rpc CreateMetas(CreateCommentMetasRequest)
      returns (CreateCommentMetasResponse) {}
  // 更新元数据
  rpc UpdateMeta(UpdateCommentMetaRequest) returns (google.protobuf.Empty) {}
  // 通过键名更新元数据
  rpc UpdateMetaByKey(UpdateCommentMetaByKeyRequest)
      returns (google.protobuf.Empty) {}
  // 删除元数据
  rpc DeleteMeta(DeleteMetaRequest) returns (google.protobuf.Empty) {}
  // 通过键名删除元数据
  rpc DeleteMetaByKey(DeleteCommentMetaByKeyRequest)
      returns (google.protobuf.Empty) {}
}
