# vim: set shiftwidth=2 tabstop=2 softtabstop=-1 expandtab:

# >  cat > .env.docker.local
# // Apple M1
# BUILD_PLATFORM=linux/arm64/v8
# BUILD_TAG=0.0.1
# BUILD_IGNORE=true
# BUILD_OPTION="cross-env ENV_JS=env/env.local.js BASE_URL=/ yarn build:web:oidc && yarn build:infrastructures && yarn build:identity-server"
# RUNTIME_ENV=production
# SERVE_ENV=local
# SERVE_APPS=''

# // Build
# > docker compose --env-file .env.docker.local build

# // Build & Run
# > rm -rf release && mkdir release && docker compose --env-file .env.docker.local up --build --force-recreate -d

# version: '3.1'

services:
  server:
    build:
      context: ${BUILD_CONTEXT:-.}
      dockerfile: Dockerfile
      args:
        BUILD_PLATFORM: ${BUILD_PLATFORM:-linux/amd64}
        BUILD_IGNORE: ${BUILD_IGNORE:-false} # ignore exectuing build in Dockerfile
        BUILD_OPTION: ${BUILD_OPTION:-build} # scripts in package.json
        RUNTIME_ENV: ${RUNTIME_ENV:-production} # runtime env, production | development
        SERVE_ENV: ${SERVE_ENV:-production} # env in ecosystem.config.js, production | fly
        SERVE_APPS: ${SERVE_APPS} # apps in ecosystem.config.js, run all apps if empty
        BUILDKIT_INLINE_CACHE: true
        BUILDKIT_CONTEXT_KEEP_GIT_DIR: true
      cache_from:
        - pomelo:latest
      target: deploy
      tags:
        - pomelo:${BUILD_TAG:-latest}
    image: pomelo
    container_name: pomelo-server
    restart: always
    environment:
      - SWAGGER_DEBUG=${SWAGGER_DEBUG:-false}
      - GRAPHQL_DEBUG=${GRAPHQL_DEBUG:-false}
      - ORIGIN=${ORIGIN:-https://example.com}
      - REDIS_URL=${REDIS_URL:-redis://host:port/db}
      - INFRASTRUCTURE_DATABASE_CONNECTION=${INFRASTRUCTURE_DATABASE_CONNECTION:-mysql://user:password@host:port/database}
      - IDENTITY_DATABASE_CONNECTION=${IDENTITY_DATABASE_CONNECTION:-mysql://user:password@host:port/database}
      - TABLE_PREFIX=${TABLE_PREFIX:-po_}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    volumes:
      - conf:/app/conf
      - ${PWD}/uploads:/app/content/uploads
      - ${PWD}/plugins:/app/content/plugins
      - ${PWD}/themes:/app/content/themes
      - ${PWD}/logs:/app/logs
    privileged: true
    ports:
      # - 3000:3000 # infrastructure microservice
      # - 3001:3001 # infrastructure server
      # - 3002:3002 # bff
      - 3003:3003 # identity server
      - 3004:3004 # static content
      - 3011:3011 # web
    external_links:
      - ${MYSQL_CONTAINER_NAME:-mysql-default-5.7}:mysql
      - ${REDIS_CONTAINER_NAME:-redis-default-6.2}:redis
    networks:
      - default
      - mysql
      - redis
  apisix:
    image: apache/apisix:${APISIX_IMAGE_TAG:-3.13.0-debian}
    container_name: pomelo-apisix
    restart: always
    environment:
      - APISIX_STAND_ALONE=true
    volumes:
      - type: volume
        source: conf
        target: /usr/local/apisix/conf/apisix.yaml
        volume:
          nocopy: true
          subpath: apisix_standalone.yaml
      - type: volume
        source: conf
        target: /usr/local/apisix/conf/config.yaml
        volume:
          nocopy: true
          subpath: config_standalone.yaml
      - ${PWD}/logs/apisix:/usr/local/apisix/logs
    privileged: true
    depends_on:
      - server
    ##network_mode: host
    ports:
      # - '9180:9180/tcp' # admin_control: true
      - '9080:9080/tcp'  # http
      # - '9091:9091/tcp'  # prometheus
      - '9443:9443/tcp'  # tls http/2
      # - '9092:9092/tcp' # enable_control: true
    networks:
      - default
networks:
  mysql:
    name: ${MYSQL_NETWORK_NAME:-mysql_default}
    external: true
  redis:
    name: ${REDIS_NETWORK_NAME:-redis_default}
    external: true
volumes:
  conf:
    name: pomelo-conf
    external: true
    # driver: local
    # driver_opts:
    #   type: none
    #   device: ${PWD}/${CONF_DIR:-CONF}
    #   o: bind
